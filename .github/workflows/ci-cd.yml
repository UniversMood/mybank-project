name: MyBank CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password_test
          MYSQL_DATABASE: mybank_test
          MYSQL_USER: mybank_test
          MYSQL_PASSWORD: mybank_test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, zip

    - name: Create Backend Environment File
      working-directory: ./backend
      run: |
        cat > .env << EOF
        APP_ENV=test
        APP_SECRET=test_secret_key_for_ci
        DATABASE_URL=mysql://mybank_test:mybank_test_password@127.0.0.1:3306/mybank_test
        EOF

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: |
        composer install --no-dev --optimize-autoloader

    - name: Setup Database
      working-directory: ./backend
      run: |
        php bin/console doctrine:database:create --if-not-exists
        php bin/console doctrine:schema:create

    - name: Test API Endpoints
      working-directory: ./backend
      run: |
        php -S localhost:8000 -t public &
        sleep 5
        curl -f http://localhost:8000/api/operations || exit 1
        echo "Integration tests passed"

  deploy-simulation:
    needs: integration-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deployment Simulation
      run: |
        echo "Application would be deployed via Docker"
        echo "Services would be restarted automatically"